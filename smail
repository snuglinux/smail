#!/bin/bash

SMAIL_VER=0.0.0
BASE_NAME=`basename "$0"`
INSTALL_PREFIX=/usr
SMAIL_DEBUG=0
SMAIL_DIR=${INSTALL_PREFIX}/share/smail
CONFIG_FILE="/etc/smail.conf"
MAIL_FILE_TEMP="/tmp/smail"
LOG_PATH="/var/log/${BASE_NAME}"

lang=`echo $LANG | cut -b 1,2`

#=======================================
# Убрать из лога color scheme
# Strip escape codes/sequences [$1: input, $2: target variable]
function strip_escape_codes() {
   local input="${1//\"/\\\"}" output="" i char within_code=0
   for ((i=0; i < ${#input}; ++i)); do
       # get current character
       char="${input:i:1}"
       # if we're currently within an escape code, check if end of
       if (( ${within_code} == 1 )); then
          # code is reached, i.e. if current character is a letter
          case "${char}" in
             [a-zA-Z]) within_code=0 ;;
             # we're no longer within an escape code
          esac
             continue
       fi
       # if current character is '\e', we've reached an escape code
       if [[ "${char}" == $'\e' ]]; then
          # now we're within an escape code
          within_code=1
          continue
       fi
       # if none of the above applies, add current character to output
       output+="${char}"
   done
   # assign output to target variable
   eval "$2=\"${output}\""
}

#=======================================
echo_log(){
  if ! [ -d ${LOG_PATH} ]; then
     mkdir ${LOG_PATH}
  fi
  strip_escape_codes "$*" stripped
  echo "$(date +%k:%M:%S): $stripped" >> ${LOG_PATH}/$(date +%Y.%m.%d)-${BASE_NAME}.log
  chmod 660 ${LOG_PATH}/$(date +%Y.%m.%d)-${BASE_NAME}.log
  echo -e $*
}

#=======================================
show_message_log(){
   if ! [ -d ${LOG_PATH} ]; then
      mkdir ${LOG_PATH}
   fi
   strip_escape_codes "$(show_message $*)" stripped
   echo "$(date +%k:%M:%S): $stripped" >> ${LOG_PATH}/$(date +%Y.%m.%d)-${BASE_NAME}.log
   chmod 660 ${LOG_PATH}/$(date +%Y.%m.%d)-${BASE_NAME}.log
   show_message $*
}

#Loading message file
if [ -f "${SMAIL_DIR}/smail.messages" ]; then
   . "${SMAIL_DIR}/smail.messages"
else
  case $lang in
       ru) echo_log "\e[31mОшибка:\e[0m не найден файл smail.messages в '${SMAIL_DIR}'!!!";;
       uk) echo_log "\e[31mПомилка:\e[0m не знайдений файл smail.messages у '${SMAIL_DIR}'!!!";;
       *)  echo_log "\e[31mError:\e[0m file smail.messages not found in '${SMAIL_DIR}'!!!";;
  esac
  exit 1
fi

if ! [ -f $CONFIG_FILE ]; then
   show_message_log NOT_FOUND_CONFIG
   exit 1
fi

#if [[ $EUID -ne 0 ]]; then
#   show_message_log I_M_NOT_ROOT
#   exit 1
#fi

if [[ $# -eq 0 ]]; then
   show_message_log SHOW_USAGE
   exit
fi

while getopts "f:t:m:r:s:vhd" OPT ; do
   case $OPT in
         f)
            FROMADDRESS=$(echo "$OPTARG" | sed 's/=//')
            ;;
         t)
            TOADDRESS=$(echo "$OPTARG" | sed 's/=//')
            ;;
         m)
            MAIL_FILE=$(echo "$OPTARG" | sed 's/=//')
            ;;
         r)
            FROMTEXT=$(echo "$OPTARG" | sed 's/=//')
            ;;
         s)
            SUBJECTTEXT=$(echo "$OPTARG" | sed 's/=//')
            ;;
         v)
            show_message_log SMAIL_VER
            exit 1
            ;;
         h)
            show_message_log SHOW_USAGE
            exit 1
            ;;
         d)
            SMAIL_DEBUG=1
            ;;
         *) show_message_log UNKNOWN_ARG $OPTARG
            exit 1
            ;;
    esac
done

if [[ ${SMAIL_DEBUG} -eq 1 ]]; then
   show_message_log PARAMETERS_USED
   echo_log "-f (from address)=$FROMADDRESS"
   echo_log "-t (to address)=$TOADDRESS"
   echo_log "-m (mail file)=$MAIL_FILE"
   echo_log "-r (from)=$FROMTEXT"
   echo_log "-s (subject)=$SUBJECTTEXT"
   echo_log "-d (debug)=$SMAIL_DEBUG"
fi

if [ -z "$FROMADDRESS" ]; then
    show_message_log NOT_SPECIFIED_PARAMETER "-f (from address)"
    exit 1
fi

if [ -z "$TOADDRESS" ]; then
   show_message_log NOT_SPECIFIED_PARAMETER "-t (to address)"
   exit 1
fi

#========================
check_email() {
   local EMAIL_CHECK
   EMAIL_CHECK=$1
   if [[ -n $EMAIL_CHECK ]]; then
      while [ -n $EMAIL_CHECK ] ; do
           if [[ "$EMAIL_CHECK" =~ [@] ]]; then
              break
           fi
        show_message_log NOT_CORRECTLY_EMAIL $EMAIL_CHECK
        exit
      done
   fi
}

#========================
check_file() {
  if [ -z "${MAIL_FILE}" ]; then
     MAIL_FILE="/tmp/smail"
     echo > ${MAIL_FILE}
  fi
  if ! [ -f "${MAIL_FILE}" ]; then
     show_message_log CANNOT_FIND_MAIL_FILE
     exit 1
  fi
  if [ "${MAIL_FILE}" != "${MAIL_FILE_TEMP}" ]; then
     cp ${MAIL_FILE} ${MAIL_FILE_TEMP}
  fi
  local STR1=`sed '1!D' ${MAIL_FILE_TEMP}`
  if ! [ -z "${STR1}" ]; then
       sed -i -e '1 s/^/\n/;' ${MAIL_FILE_TEMP}
  fi
  if ! grep -q 'Content-Type: text/plain; charset="utf-8"' ${MAIL_FILE_TEMP} ; then
     sed -i -e '1 s/^/Content-Type: text\/plain; charset="utf-8"\n/;' ${MAIL_FILE_TEMP}
  fi
  if [ -n "$SUBJECTTEXT" ]; then
     if ! grep -q 'Subject: ' ${MAIL_FILE_TEMP} ; then
        sed -i -e '1 s/^/'"Subject: $SUBJECTTEXT"'\n/;' ${MAIL_FILE_TEMP}
     fi
  fi
  if [ -n "$FROMTEXT" ]; then
     FROMTEXT="$FROMADDRESS"
  fi
  if ! grep -q 'From: ' ${MAIL_FILE_TEMP} ; then
     sed -i -e '1 s/^/'"From: $FROMTEXT"'\n/;' ${MAIL_FILE_TEMP}
  fi
  if ! grep -q 'To: ' ${MAIL_FILE_TEMP} ; then
     sed -i -e '1 s/^/'"To: $TOADDRESS"'\n/;' ${MAIL_FILE_TEMP}
  fi
}

check_email $FROMADDRESS
check_email $TOADDRESS
check_file

if grep -q $FROMADDRESS $CONFIG_FILE ; then
   MAILSERVER=`grep $FROMADDRESS /etc/smail.conf | awk '{print $2}'`
   INV_SMTP=`grep $FROMADDRESS /etc/smail.conf | awk '{print $3}'`
   AUTHLOGIN=`echo -n $FROMADDRESS | openssl enc -base64`
   AUTHPASS=`grep $FROMADDRESS /etc/smail.conf | awk '{print $4}'`
   DOMAIN=$(echo "$FROMADDRESS" | sed 's|.*@||')
else
  show_message_log NO_EMAIL_CONFIG_FILE $FROMADDRESS
  exit 1
fi

#========================
imapscript () {
  sleep 2;
  echo "$INV_SMTP $MAILSERVER"
  sleep 1;
  echo "Auth Login"
  sleep 1;
  echo "$AUTHLOGIN"
  sleep 1;
  echo "$AUTHPASS"
  sleep 1;
  echo "Mail From: $FROMADDRESS"
  sleep 1;
  echo "Rcpt To: $TOADDRESS"
  sleep 1;
  echo "Data"
  sleep 1;
  while read line; do
     echo ${line}
  done < ${MAIL_FILE_TEMP}
  sleep 1;
  echo "."
  sleep 1;
  echo "Quit"
}

if [[ ${SMAIL_DEBUG} -eq 1 ]]; then
  show_message_log EXECUTION_FUNCTION "imapscript"
  `imapscript | openssl s_client -ign_eof -connect $MAILSERVER:465 >> /dev/null`
else
  imapscript | openssl s_client -ign_eof -connect $MAILSERVER:465
fi
if [ $? != 0 ]; then
   show_message_log FUNCTION_FAILURE "imapscript"
fi
if [ -f ${MAIL_FILE_TEMP} ]; then
   rm -f ${MAIL_FILE_TEMP}
   if [[ ${SMAIL_DEBUG} -eq 1 ]]; then
      if ! [ -f ${MAIL_FILE_TEMP} ]; then
         show_message_log FILE_DELETED ${MAIL_FILE_TEMP}
      else
         show_message_log FAILED_DELETE_FILE ${MAIL_FILE_TEMP}
      fi
   fi
fi